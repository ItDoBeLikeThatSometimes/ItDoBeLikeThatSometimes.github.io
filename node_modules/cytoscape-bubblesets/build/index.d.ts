/**
 * cytoscape-bubblesets
 * https://github.com/upsetjs/cytoscape.js-bubblesets
 *
 * Copyright (c) 2021-2022 Samuel Gratzl <sam@sgratzl.com>
 */

import cy from 'cytoscape';
import { ISVGLayer } from 'cytoscape-layers';
import { IOutlineOptions, IPotentialOptions, IRoutingOptions } from 'bubblesets-js';

interface IBubbleSetPathOptions extends IOutlineOptions, IPotentialOptions, ISVGPathStyle, IRoutingOptions {
    throttle?: number;
    interactive?: boolean;
    includeLabels?: boolean;
    includeMainLabels?: boolean;
    includeOverlays?: boolean;
    includeSourceLabels?: boolean;
    includeTargetLabels?: boolean;
}
interface ISVGPathStyle {
    style?: Partial<CSSStyleDeclaration>;
    className?: string;
}
declare class BubbleSetPath {
    #private;
    readonly node: SVGPathElement;
    readonly nodes: cy.NodeCollection;
    readonly edges: cy.EdgeCollection;
    readonly avoidNodes: cy.NodeCollection;
    constructor(adapter: {
        remove(path: BubbleSetPath): boolean;
    }, node: SVGPathElement, nodes: cy.NodeCollection, edges: cy.EdgeCollection, avoidNodes: cy.NodeCollection, options?: IBubbleSetPathOptions);
    update: (forceUpdate?: boolean) => void;
    remove(): boolean;
}

interface IBubbleSetsPluginOptions extends IBubbleSetPathOptions {
    layer?: ISVGLayer;
}
declare class BubbleSetsPlugin {
    #private;
    readonly layer: ISVGLayer;
    constructor(currentCy: cy.Core, options?: IBubbleSetsPluginOptions);
    destroy(): void;
    addPath(nodes: cy.NodeCollection, edges?: cy.EdgeCollection | null, avoidNodes?: cy.NodeCollection | null, options?: IBubbleSetPathOptions): BubbleSetPath;
    getPaths(): BubbleSetPath[];
    removePath(path: BubbleSetPath): boolean;
    update(forceUpdate?: boolean): void;
}
declare function bubbleSets(this: cy.Core, options?: IBubbleSetsPluginOptions): BubbleSetsPlugin;

type CytoscapeRegistry = {
    (type: 'core' | 'collection' | 'layout', name: string, extension: unknown): void;
};
declare function register(cytoscape: CytoscapeRegistry): void;
declare namespace cytoscape {
    type Ext2 = (cytoscape: (type: 'core' | 'collection' | 'layout', name: string, extension: any) => void) => void;
    function use(module: Ext2): void;
    interface Core {
        bubbleSets: typeof bubbleSets;
    }
}

export { BubbleSetPath, BubbleSetsPlugin, type CytoscapeRegistry, type IBubbleSetPathOptions, type IBubbleSetsPluginOptions, type ISVGPathStyle, bubbleSets, cytoscape, register as default };
//# sourceMappingURL=index.d.ts.map
